{"version":3,"sources":["assets/activityPictures sync /^/.*/.jpeg$","assets/activityPictures/Fitness.jpeg","assets/activityPictures/Gym training.jpeg","assets/activityPictures/Jogging.jpeg","assets/activityPictures/Spinning.jpeg","assets/activityPictures/Zumba.jpeg","assets/userPictures sync /^/.*/.jpg$","assets/userPictures/0.jpg","assets/userPictures/1.jpg","assets/userPictures/2.jpg","assets/userPictures/3.jpg","assets/userPictures/4.jpg","assets/userPictures/5.jpg","assets/userPictures/6.jpg","assets/userPictures/7.jpg","assets/userPictures/8.jpg","components/Editcustomer.js","components/Addcustomer.js","components/Customers.js","components/createTrainingCards.js","components/AddTraining.js","components/Trainings.js","components/createCards.js","components/Home.js","components/Navigator copy.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Editcustomer","props","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","handleClose","handleInputChange","event","target","name","value","console","log","Button","size","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","onChange","label","fullWidth","DialogActions","color","updateCustomer","links","href","Addcustomer","style","variant","saveCustomer","Customers","message","setMessage","useEffect","fetchCustomer","fetch","then","response","json","data","content","link","method","headers","body","JSON","stringify","res","catch","err","error","columns","header","accessor","sortable","filterable","width","Cell","row","original","window","confirm","Grid","container","item","newCustomer","padding","defaultPageSize","Snackbar","autoHideDuration","reason","CreateTrainingCard","React","trainings","setTrainings","fetchTrainings","useStyles","makeStyles","theme","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","classes","justifyContent","date","activity","index","Card","className","key","CardHeader","Avatar","aria-label","charAt","action","IconButton","title","subheader","moment","format","CardMedia","image","require","alt","CardContent","Typography","component","CardActions","disableSpacing","formControl","spacing","minWidth","selectEmpty","marginTop","AddTraining","Date","training","setTraining","type","FormControl","InputLabel","Select","labelId","MenuItem","checkedTraining","utc","saveTraining","Trainings","fetchTraining","justify","alignItems","newTraining","CreateCard","expanded","setExpanded","setAnchorEl","handleExpandClick","Math","floor","random","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","Home","Navigator","root","flexGrow","menuButton","marginRight","auth","anchorEl","Boolean","AppBar","position","Toolbar","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","to","App","path","exact","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ed37362.chunk.js","sourcesContent":["var map = {\n\t\"./Fitness.jpeg\": 125,\n\t\"./Gym training.jpeg\": 126,\n\t\"./Jogging.jpeg\": 127,\n\t\"./Spinning.jpeg\": 128,\n\t\"./Zumba.jpeg\": 129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 124;","module.exports = __webpack_public_path__ + \"static/media/Fitness.21781198.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Gym training.66c18287.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Jogging.be19579e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Spinning.24a64d5a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Zumba.b1d2e430.jpeg\";","var map = {\n\t\"./0.jpg\": 131,\n\t\"./1.jpg\": 132,\n\t\"./2.jpg\": 133,\n\t\"./3.jpg\": 134,\n\t\"./4.jpg\": 135,\n\t\"./5.jpg\": 136,\n\t\"./6.jpg\": 137,\n\t\"./7.jpg\": 138,\n\t\"./8.jpg\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 130;","module.exports = __webpack_public_path__ + \"static/media/0.fed3e4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.7652dffc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.b5e0701a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.7ddb70cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.7f580de2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.a2d51229.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.7a00faa6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.4354ac30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.44923407.jpg\";","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Editcustomer(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [customer, setCustomer] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    streetaddress: \"\",\r\n    postcode: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(props.customer);\r\n    setCustomer({\r\n      firstname: props.firstname,\r\n      lastname: props.lastname,\r\n      streetaddress: props.streetaddress,\r\n      postcode: props.postcode,\r\n      city: props.city,\r\n      email: props.email,\r\n      phone: props.phone\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n    console.log(customer);\r\n  };\r\n\r\n  //link to itself\r\n  const updateCustomer = () => {\r\n    props.updateCustomer(customer, props.customer.links[1].href);\r\n    console.log(\"customerlog\");\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" streetaddress=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit customer</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Edit customers information here</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Firstname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"lastname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"streetaddress\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"postcode\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"city\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={updateCustomer} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Addcustomer(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [customer, setCustomer] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    streetaddress: \"\",\r\n    postcode: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addCustomer = () => {\r\n    props.saveCustomer(customer);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: 10 }}>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add customer\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New customer</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Fill in customer information here\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"firstname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"lastname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"streetaddress\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"postcode\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"city\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addCustomer} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Editcustomer from \"./Editcustomer\";\r\nimport Addcustomer from \"./Addcustomer\";\r\n\r\nconst Customers = () => {\r\n  const [customer, setCustomer] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCustomer();\r\n  }, []);\r\n\r\n  //retrieves initially the customer data\r\n  const fetchCustomer = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then(response => response.json())\r\n      .then(data => setCustomer(data.content));\r\n  };\r\n\r\n  const deleteCustomer = link => {\r\n    if (window.confirm(\"Do you really want to delete this customer?\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchCustomer())\r\n        .then(res => setMessage(\"customer deleted\"))\r\n        .then(res => setOpen(true))\r\n        .catch(err => console.error(err));\r\n    }\r\n  };\r\n\r\n  const saveCustomer = newCustomer => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newCustomer)\r\n    })\r\n      .then(res => fetchCustomer())\r\n      .then(res => setMessage(\"Customer saved succesfully\"))\r\n      .then(res => setOpen(true))\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n      .then(res => fetchCustomer())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const columns = [\r\n    { header: \"First name\", accessor: \"firstname\" },\r\n    { header: \"Last name\", accessor: \"lastname\" },\r\n    { header: \"Street adress\", accessor: \"streetaddress\" },\r\n    { header: \"Postcode\", accessor: \"postcode\" },\r\n    { header: \"City\", accessor: \"city\" },\r\n    { header: \"E-mail\", accessor: \"email\" },\r\n    { header: \"Phone number\", accessor: \"phone\" },\r\n    {\r\n      sortable: false,\r\n      filterable: false,\r\n      width: 100,\r\n      Cell: row => (\r\n        <Editcustomer updateCustomer={updateCustomer} customer={row.original} />\r\n      )\r\n    },\r\n    {\r\n      sortable: false,\r\n      filterable: false,\r\n      width: 100,\r\n      accessor: \"links[1].href\",\r\n      Cell: ({ value }) => (\r\n        <Button\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          onClick={() => deleteCustomer(value)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item>\r\n          <Addcustomer saveCustomer={saveCustomer} />\r\n        </Grid>\r\n        <Grid style={{ padding: 15, color: \"black\" }} item>\r\n          <CSVLink style={{ color: \"black\" }} data={customer}>\r\n            Export data\r\n          </CSVLink>\r\n        </Grid>\r\n      </Grid>\r\n      <ReactTable\r\n        filterable={true}\r\n        data={customer}\r\n        columns={columns}\r\n        defaultPageSize={10}\r\n      />\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        message={message}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport moment from \"moment\";\r\n\r\nfunction CreateTrainingCard() {\r\n  const [customer, setCustomer] = useState([]);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  const fetchCustomer = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\")\r\n      .then(response => response.json())\r\n      .then(data => setTrainings(data.content));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCustomer();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchTrainings();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    card: {\r\n      maxWidth: 345\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n      transform: \"rotate(0deg)\",\r\n      marginLeft: \"auto\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest\r\n      })\r\n    },\r\n    expandOpen: {\r\n      transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500]\r\n    }\r\n  }));\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const fetchTrainings = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\")\r\n      .then(response => response.json())\r\n      .then(data => setTrainings(data.content));\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={{ justifyContent: \"center\" }}>\r\n        {trainings.map(({ date, duration, activity, links, index }) => (\r\n          <Grid item style={{ padding: 15 }}>\r\n            <Card className={classes.card} key={index}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    {activity.charAt(0)}\r\n                  </Avatar>\r\n                }\r\n                action={\r\n                  <IconButton aria-label=\"settings\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                }\r\n                title={activity}\r\n                subheader={\r\n                  \"Date: \" +\r\n                  moment(date).format(\"MMM Do YY\") +\r\n                  \"\\n Starting time: \" +\r\n                  moment(date).format(\"h:mm a\")\r\n                }\r\n              />\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={require(\"./../assets/activityPictures/\" +\r\n                  activity +\r\n                  \".jpeg\")}\r\n                height=\"300\"\r\n                alt={\"picture of\" + activity}\r\n                title={activity}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Duration: {duration} minutes\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing></CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTrainingCard;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport \"date-fns\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function AddTraining(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [training, setTraining] = useState({\r\n    date: Date(\"2019-12-12\"),\r\n    duration: 0,\r\n    activity: \"\",\r\n    customer: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setTraining({ ...training, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const checkFormat = checkedTraining => {\r\n    checkedTraining.date = moment.utc(checkedTraining.date);\r\n    checkedTraining.customer =\r\n      \"https://customerrest.herokuapp.com/api/customers/\" +\r\n      checkedTraining.customer;\r\n  };\r\n\r\n  const addTraining = () => {\r\n    checkFormat(training);\r\n    props.saveTraining(training);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: 10 }}>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add Training\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Training</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Add training details</DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={training.date}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"date\"\r\n            fullWidth\r\n          />\r\n\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">activity</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={training.activity}\r\n              name=\"activity\"\r\n              label=\"activity\"\r\n              onChange={e => handleInputChange(e)}\r\n            >\r\n              <MenuItem value={\"Zumba\"}>Zumba</MenuItem>\r\n              <MenuItem value={\"Fitness\"}>Fitness</MenuItem>\r\n              <MenuItem value={\"Gym training\"}>Gym training</MenuItem>\r\n              <MenuItem value={\"Spinning\"}>Spinning</MenuItem>\r\n              <MenuItem value={\"Jogging\"}>Jogging</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"duration\"\r\n            value={training.duration}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"duration\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"customer\"\r\n            value={training.customer}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"customer id\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addTraining} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreateTrainingCard from \"./createTrainingCards\";\r\nimport AddTraining from \"./AddTraining\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst Trainings = () => {\r\n  const [training, setTraining] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTraining();\r\n  }, []);\r\n\r\n  const fetchTraining = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\")\r\n      .then(response => response.json())\r\n      .then(data => setTraining(data.content));\r\n  };\r\n\r\n  const deleteTraining = link => {\r\n    if (window.confirm(\"Do you really want to delete this customer?\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchTraining())\r\n        .then(res => setMessage(\"Training deleted\"))\r\n        .then(res => setOpen(true))\r\n        .catch(err => console.error(err));\r\n    }\r\n  };\r\n\r\n  const saveTraining = newTraining => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newTraining)\r\n    })\r\n      .then(res => fetchTraining())\r\n      .then(res => setMessage(\"Training saved succesfully\"))\r\n      .then(res => setOpen(true))\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const updateTraining = (training, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(training)\r\n    })\r\n      .then(res => fetchTraining())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid justify=\"center\" alignItems=\"center\" container>\r\n        <Grid item>\r\n          <AddTraining saveTraining={saveTraining} />\r\n        </Grid>\r\n      </Grid>\r\n      <CreateTrainingCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Editcustomer from \"./Editcustomer\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Menu } from \"@material-ui/core\";\r\n\r\nfunction CreateCard() {\r\n  const [customer, setCustomer] = useState([]);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [trainings, setTrainings] = useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const fetchCustomer = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then(response => response.json())\r\n      .then(data => setCustomer(data.content));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCustomer();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchTrainings();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    card: {\r\n      maxWidth: 345\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n      transform: \"rotate(0deg)\",\r\n      marginLeft: \"auto\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest\r\n      })\r\n    },\r\n    expandOpen: {\r\n      transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500]\r\n    }\r\n  }));\r\n\r\n  const deleteCustomer = link => {\r\n    if (window.confirm(\"Do you really want to delete this customer?\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchCustomer())\r\n        .then(res => setMessage(\"customer deleted\"))\r\n        .then(res => setOpen(true))\r\n        .catch(err => console.error(err));\r\n    }\r\n  };\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n    Math.floor(Math.random() * 20);\r\n  };\r\n\r\n  const fetchTrainings = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\")\r\n      .then(response => response.json())\r\n      .then(data => setTrainings(data.content));\r\n  };\r\n\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n      .then(res => fetchCustomer())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={{ justifyContent: \"center\" }}>\r\n        {customer.map(({ firstname, lastname, phone, links, email, city }) => (\r\n          <Grid item style={{ padding: 15 }}>\r\n            <Card className={classes.card} key={links[0].href}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    {firstname.charAt(0) + lastname.charAt(0)}\r\n                  </Avatar>\r\n                }\r\n                title={firstname + \" \" + lastname}\r\n                subheader={\"Phone: \" + phone}\r\n              />\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={require(\"./../assets/userPictures/\" +\r\n                  Math.floor(Math.random() * 9) +\r\n                  \".jpg\")}\r\n                height=\"300\"\r\n                alt={\"picture of\" + firstname}\r\n                title={firstname}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Email: {email} <br></br>City: {city}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <IconButton\r\n                  className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded\r\n                  })}\r\n                  onClick={handleExpandClick}\r\n                  aria-expanded={expanded}\r\n                  aria-label=\"show more\"\r\n                >\r\n                  <ExpandMoreIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n              <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    onClick={() => deleteCustomer(links[0].href)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                  <Editcustomer updateCustomer={updateCustomer} />\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        message={message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport CreateCard from \"./createCards\";\r\nimport Addcustomer from \"./Addcustomer\";\r\n\r\nconst Home = () => {\r\n  const [customer, setCustomer] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCustomer();\r\n  }, []);\r\n\r\n  //retrieves initially the customer data\r\n  const fetchCustomer = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then(response => response.json())\r\n      .then(data => setCustomer(data.content));\r\n  };\r\n\r\n  const deleteCustomer = link => {\r\n    if (window.confirm(\"Do you really want to delete this customer?\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchCustomer())\r\n        .then(res => setMessage(\"customer deleted\"))\r\n        .then(res => setOpen(true))\r\n        .catch(err => console.error(err));\r\n    }\r\n  };\r\n\r\n  const saveCustomer = newCustomer => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newCustomer)\r\n    })\r\n      .then(res => fetchCustomer())\r\n      .then(res => setMessage(\"Customer saved succesfully\"))\r\n      .then(res => setOpen(true))\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n      .then(res => fetchCustomer())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Your customers</h1>\r\n      <Grid justify=\"center\" alignItems=\"center\" container>\r\n        <Grid item>\r\n          <Addcustomer saveCustomer={saveCustomer} />\r\n        </Grid>\r\n      </Grid>\r\n      <CreateCard />\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        message={message}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst Navigator = () => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = event => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/customers\">Customers</Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link className=\"nav-link\" to=\"/trainings\">\r\n              Trainings\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link className=\"nav-link\" to=\"/home\">\r\n              Home\r\n            </Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Customers from \"./components/Customers\";\nimport Trainings from \"./components/Trainings\";\nimport Home from \"./components/Home\";\nimport Navigator from \"./components/Navigator copy\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Navigator />\n          <Switch>\n            <Route path=\"/home\" exact component={Home} />\n            <Route path=\"/trainings/\" component={Trainings} />\n            <Route path=\"/customers/\" component={Customers} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}